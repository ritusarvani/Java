import java.util.*;
class Binary {
    public static void main(String []args) {
        int []a = new int[25];
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter the no.of elements ");
        int n = sc.nextInt();
        System.out.println("Enter the elements ");
        for(int i=0; i<n; i++) 
            a[i] = sc.nextInt();
        System.out.println("Enter the key to search ");
        int key = sc.nextInt();
        int low=0,high=n-1,mid,pos=0;
        boolean found = false;
        while (low <= high) {
                mid = (low+high)/2;
                if (a[mid] == key) {
                    found = true;
                    System.out.println("Key is found at index ");
                    System.out.println(mid);
                    break;
                }
                else if (a[mid] > key)
                    high = mid-1;
                else
                    low = mid+1;
        }
        if (!found)
            System.out.println("Key is not found");
        else
        {
            System.out.println("Search Succesful");
        }
    }
}


    import java.util.*;
    class Binary {
    public static void main(String []args) {                                                                           
        int []a = new int[25];
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter the no.of elements ");
        int n = sc.nextInt();
        System.out.println("Enter the elements ");
        for(int i=0; i<n; i++) 
            a[i] = sc.nextInt();
        System.out.println("Enter the key to search ");
        int key = sc.nextInt();
        int result = BinarySearch(a,0,n-1,key);
        if (result == -1)
            System.out.println("Key is not found");
        else
            System.out.println("Key is found at index ");
            System.out.println(result);
    }

        public static int BinarySearch(int arr[],int low,int high,int key) {
            if (low <= high) {
                int mid = (low+high)/2;
                if (arr[mid] == key)
                    return mid;
                else if (arr[mid] > key)
                    return BinarySearch(arr,low,mid-1,key);
                else
                    return BinarySearch(arr,mid+1,high,key);
            }
            return -1;
        }
    
}
